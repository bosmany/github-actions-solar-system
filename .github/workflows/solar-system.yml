name: Solar System Workflow

on:
  workflow_dispatch: null
  push:
    branches:
      - main
      - feature/*

env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  # Job 1: Unit Testing
  unit-testing:
    name: Unit Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Unit Testing
        run: npm test

      - name: Archive Test Result
        uses: actions/upload-artifact@v3
        with:
          name: Mocha-Test-Result
          path: test-results.xml

  # Job 2: Code Coverage (Runs independently)
  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm install

      - continue-on-error: true
        run: npm run coverage

      - uses: actions/upload-artifact@v3
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5

  # Job 3: Linting (Runs independently)
  linting:
    name: Lint Code Base
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Run Linter
        run: npm run lint

      - name: Upload Linting Result
        uses: actions/upload-artifact@v3
        with:
          name: Linting-Result
          path: lint-results.xml
          
  # Job 4: Deploy to Staging (Only runs after successful unit tests and code coverage)
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [unit-testing, code-coverage]
    if: ${{ success() }} # Only run if both previous jobs succeeded
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Deploy Application
        run: echo "Deploying to Staging..."

      - name: Notify Success
        run: echo "Deployment to Staging was successful!"

  # Job 5: Send Failure Notification (Runs if any job fails)
  failure-notification:
    name: Notify on Failure
    runs-on: ubuntu-latest
    if: ${{ failure() }} # Run this job if any previous jobs fail
    steps:
      - name: Send Notification on Failure
        run: |
          echo "Notifying via Slack or Email..."
          # Replace with actual Slack/Email API calls
